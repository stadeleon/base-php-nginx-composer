# images documentation https://dockerfile.readthedocs.io/en/latest/content/DockerImages/index.html
# docker / docker-compose customization Documentation https://github.com/webdevops/php-docker-boilerplate
#
# IN YOUR PROJECT DELETE UNNECESSARY SERVICES !!!
version: "3.1"
services:
#######################################
##    Composer service used to run composer while application starting
#######################################
  composer:
    build:
      context: .
      dockerfile: docker/composer/Composer.Dockerfile
    restart: 'no'
    volumes:
      - .:/app
    command: 'install -a --ignore-platform-reqs'

######################################
#    NginX app service  # for current application used `webdevops/nginx-dev` image
######################################
  app:
    image:  webdevops/nginx-dev:alpine
    container_name: ${APP_NAME}-app
    environment:
      WEB_PHP_SOCKET: ${APP_NAME}-php:9000
    env_file:
      - etc/environment.yml
      - etc/environment.dev.yml
    ports:
      - ${APP_PORT}:80
      - ${APP_SSL_PORT}:443
    volumes:
      - ./:/app
      - ./:/docker/
    #      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
#      - mysql
#      - postgres
#      - mongodb
    external_links:
      - postgres
    networks:
      - default

######################################
#    PHP-FPM service used `webdevops/php-dev:7.4` image
######################################
  php:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: ${APP_NAME}-php
    ports:
      - ${APP_SSH_PORT}:22
      - ${DEBUG_PORT}:9000
    volumes:
      - ./:/app/
      - ./:/docker/
    # cap and privileged needed for slowlog
    cap_add:
      - SYS_PTRACE
    privileged: true
    env_file:
      - etc/environment.yml
      - etc/environment.dev.yml
    networks:
      - default

######################################
#    PostgreSQL server
######################################
#  postgres:
#    build:
#      context: docker/postgres/
#      dockerfile: Postgres-12.1.Dockerfile
#    container_name: postgres
#    env_file:
#      - etc/environment.yml
#      - etc/environment.dev.yml
#    environment:
#      POSTGRES_USER: ${DB_ROOTUSER}
#      POSTGRES_PASSWORD: ${DB_ROOTPASSWORD}
#      POSTGRES_DB: ${DB_DATABASE}
#    ports:
#      - ${DB_PORT_EXTERNAL}:${DB_PORT}
#    volumes:
#      - pgsqldata:/var/lib/postgresql/data
#    networks:
#      - default

######################################
#    MongoDB server
######################################
#  mongodb:
#    container_name: mongodb
#    image: mongo
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
#    ports:
#      - ${MONGO_DB_PORT_EXTERNAL}:27017
#    volumes:
#      - mongodbdata:/data/db
#    networks:
#      - default

#######################################
# MySQL server
#######################################
  #  mysql:
  #    build:
  #      context: docker/mysql/
  #        #dockerfile: MySQL-5.5.Dockerfile
  #        dockerfile: MySQL-5.6.Dockerfile
  #        #dockerfile: MySQL-5.7.Dockerfile
  #        #dockerfile: MariaDB-5.5.Dockerfile
  #        #dockerfile: MariaDB-10.Dockerfile
  #        #dockerfile: Percona-5.5.Dockerfile
  #        #dockerfile: Percona-5.6.Dockerfile
  #        #dockerfile: Percona-5.7.Dockerfile
  #    ports:
  #      - 13306:3306
  #    volumes:
  #      - mysqldata:/var/lib/mysql
  #    env_file:
  #      - etc/environment.yml
  #      - etc/environment.development.yml
  #    networks:
  #      - default

#######################################
# Elasticsearch
#######################################
  #elasticsearch:
  #  build:
  #    context: docker/elasticsearch/
  #  ports:
  #    - 19200:9200
  #    - 19300:9300
  #  volumes:
  #    - elasticsearch:/usr/share/elasticsearch/data
  #  env_file:
  #    - etc/environment.yml
  #    - etc/environment.development.yml
  #  environment:
  #    - VIRTUAL_HOST=elasticsearch.boilerplate.docker
  #    - VIRTUAL_PORT=9200

#######################################
# Redis
#######################################
  #redis:
  #  build:
  #    context: docker/redis/
  #  volumes:
  #    - redisdata:/data
  #  env_file:
  #    - etc/environment.yml
  #    - etc/environment.development.yml

#######################################
# Memcached
#######################################
  #memcached:
  #  build:
  #    context: docker/memcached/
  #  env_file:
  #    - etc/environment.yml
  #    - etc/environment.development.yml

#volumes:
#  pgsqldata:
#    driver: "local"
#  mongodbdata:
#    driver: "local"
#  mysqldata:
#    driver: "local"
#  elasticsearch:
#    driver: "local"
#  redisdata:
#    driver: "local"

networks:
  default:
    external:
      name: ${DOCKER_NETWORK}
